


ARM Macro Assembler    Page 1 


    1 00000000         ;******************** (C) COPYRIGHT 2018 IoTality ******
                       **************
    2 00000000         ;* File Name          : isr.s
    3 00000000         ;* Author             : IoTality
    4 00000000         ;* Date               : 22-June-2018
    5 00000000         ;* Description        : Exception handler for SVC
    6 00000000         ;*                      - Executes when SVC instruction 
                       is executed from main code
    7 00000000         ;*                      - SVC parameter is used to switc
                       h ON LED on GPIO-D pins PD12 to PD15
    8 00000000         ;*                      - Parameter 1 to 5 switches on L
                       EDs on PD12-PD15 respectively
    9 00000000         ;*                      - Any other Parameter switches o
                       n all LEDs
   10 00000000         
   11 00000000         ;*                      - Service call 5 is special. It 
                       switches the processor to privileged mode.
   12 00000000         
   13 00000000         ;*******************************************************
                       **************
   14 00000000         
   15 00000000         
   16 00000000                 GET              reg_stm32f407xx.inc
    1 00000000         
    2 00000000         ; ******* Register definitions *******
    3 00000000         
    4 00000000         ;As per STM32F407 datasheet and reference manual
    5 00000000         
    6 00000000 40023830 
                       RCC_AHB1ENR
                               EQU              0x40023830  ;Clock control for 
                                                            AHB1 peripherals (i
                                                            ncludes GPIO)
    7 00000000         
    8 00000000         ;GPIO-D control registers
    9 00000000 40020C00 
                       GPIOD_MODER
                               EQU              0x40020C00  ;set GPIO pin mode 
                                                            as Input/Output/Ana
                                                            log
   10 00000000 40020C04 
                       GPIOD_OTYPER
                               EQU              0x40020C04  ;Set GPIO pin type 
                                                            as push-pull or ope
                                                            n drain
   11 00000000 40020C08 
                       GPIOD_OSPEEDR
                               EQU              0x40020C08  ;Set GPIO pin switc
                                                            hing speed
   12 00000000 40020C0C 
                       GPIOD_PUPDR
                               EQU              0x40020C0C  ;Set GPIO pin pull-
                                                            up/pull-down
   13 00000000 40020C14 
                       GPIOD_ODR
                               EQU              0x40020C14  ;GPIO pin output da
                                                            ta
   14 00000000         
   15 00000000 40020C18 



ARM Macro Assembler    Page 2 


                       GPIOD_BSRR
                               EQU              0x40020C18
   16 00000000         
   17 00000000         
   18 00000000 E000E010 
                       SYSTICK_CONTROLR
                               EQU              0xE000E010
   19 00000000 E000E014 
                       SYSTICK_RELOADR
                               EQU              0xE000E014
   20 00000000         
   21 00000000         
   22 00000000         ; **************************
   23 00000000         
   24 00000000         
   25 00000000                 END
   17 00000000         
   18 00000000                 AREA             ISRCODE, CODE, READONLY
   19 00000000         
   20 00000000         
   21 00000000                 IMPORT           Service_Call_1
   22 00000000                 IMPORT           Service_Call_2
   23 00000000                 IMPORT           Service_Call_3
   24 00000000                 IMPORT           Service_Call_4
   25 00000000                 IMPORT           Service_Call_5
   26 00000000                 IMPORT           Service_Call_Default
   27 00000000         
   28 00000000         
   29 00000000         ;*******************************************************
                       **************
   30 00000000         ;* SVC exception handler
   31 00000000         ;* Redefined here (startup code contains a weak definiti
                       on)
   32 00000000         ;* Extracts the parameter passed on in SVC instruction.
   33 00000000         ;* The parameter is stored in lower byte of SVC encoding
                       
   34 00000000         ;* and it is retrieved in the following way.
   35 00000000         
   36 00000000         ;* Before switching to exception handler execution, the 
                       
   37 00000000         ;* processor puts a number of registers on stack. This i
                       s 
   38 00000000         ;* called the stacking process. The registers stacked ar
                       e as below,
   39 00000000         ;* in the same order as listed.
   40 00000000         
   41 00000000         ;* PSR
   42 00000000         ;* PC (Of the next instruction to be executed)
   43 00000000         ;* LR
   44 00000000         ;* R12
   45 00000000         ;* R3
   46 00000000         ;* R2
   47 00000000         ;* R1
   48 00000000         ;* R0
   49 00000000         
   50 00000000         ;* The execption handler first finds out which stack poi
                       nter
   51 00000000         ;* is being used (either MSP or PSP). Then it reads the 
                       value



ARM Macro Assembler    Page 3 


   52 00000000         ;* of the stack pointer being used.
   53 00000000         ;* 
   54 00000000         ;* It then traverses the stack 24 bytes (6 registers R0-
                       R3, R12, LR  
   55 00000000         ;* on stack with 4 bytes each) to retrieve stacked PC.
   56 00000000         ;* This stacked PC is the address of next instruction to
                        be executed
   57 00000000         ;* after the handler returns to application code.
   58 00000000         ;* 
   59 00000000         ;* Once it gets the PC, it reads the lower byte of the e
                       arlier instruction
   60 00000000         ;* which is precisely the SVC instruction. The parameter
                        is stored in 
   61 00000000         ;* lower byte of SVC encoding (Little Endian). Thus we g
                       et the SVC parameter
   62 00000000         ;* in R0 now.
   63 00000000         ;* 
   64 00000000         ;* Based on this parameter value, different functions ar
                       e called from the
   65 00000000         ;* file services.s. This is quite straightforward as it 
                       compares the parameter
   66 00000000         ;* to a value between 1 to 5. If the value is other than
                        these values,
   67 00000000         ;* a default handler is called.
   68 00000000         ;*******************************************************
                       **************
   69 00000000         
   70 00000000         
   71 00000000         
   72 00000000         SVC_Handler
                               PROC
   73 00000000                 EXPORT           SVC_Handler
   74 00000000                 EXPORT           SysTick_Handler
   75 00000000                 EXPORT           HardFault_Handler
   76 00000000         
   77 00000000         ; Extract the SVC parameter
   78 00000000 F01E 0F04       TST              LR, #4
   79 00000004 BF0C F3EF 
              8008             MRSEQ            R0, MSP
   80 0000000A F3EF 8009       MRSNE            R0, PSP
   81 0000000E         
   82 0000000E 6980            LDR              R0, [R0, #24]
   83 00000010 F810 0C02       LDRB             R0, [R0, #-2]
   84 00000014         
   85 00000014 2801            CMP              R0, #01
   86 00000016 BF08 4912       LDREQ            R1, =Service_Call_1
   87 0000001A D010            BEQ              DoneService
   88 0000001C         
   89 0000001C 2802            CMP              R0, #02
   90 0000001E BF08 4911       LDREQ            R1, =Service_Call_2
   91 00000022 D00C            BEQ              DoneService
   92 00000024         
   93 00000024 2803            CMP              R0, #03
   94 00000026 BF08 4910       LDREQ            R1, =Service_Call_3
   95 0000002A D008            BEQ              DoneService
   96 0000002C         
   97 0000002C 2804            CMP              R0, #04
   98 0000002E BF08 490F       LDREQ            R1, =Service_Call_4
   99 00000032 D004            BEQ              DoneService



ARM Macro Assembler    Page 4 


  100 00000034         
  101 00000034 2805            CMP              R0, #05
  102 00000036 BF08 490E       LDREQ            R1, =Service_Call_5
  103 0000003A D000            BEQ              DoneService
  104 0000003C         
  105 0000003C 490E            LDR              R1, =Service_Call_Default
  106 0000003E         
  107 0000003E         DoneService
  108 0000003E B500            PUSH             {LR}
  109 00000040 4788            BLX              R1
  110 00000042 BD00            POP              {PC}
  111 00000044         
  112 00000044         
  113 00000044                 ENDP
  114 00000044         
  115 00000044         
  116 00000044         
  117 00000044         SysTick_Handler
                               PROC
  118 00000044         
  119 00000044         
  120 00000044 490D            LDR              R1, =GPIOD_BSRR
  121 00000046         
  122 00000046 B117            CBZ              R7, Turn_OFF
  123 00000048         Turn_ON
  124 00000048 F44F 5080       MOV              R0, #LEDs_ON
  125 0000004C E001            B                DoneSysTick
  126 0000004E         Turn_OFF
  127 0000004E F04F 5080       MOV              R0, #LEDs_OFF
  128 00000052         DoneSysTick
  129 00000052 6008            STR              R0, [R1]
  130 00000054 F087 0701       EOR              R7, R7, #0x01
  131 00000058         
  132 00000058 4770            BX               LR
  133 0000005A         
  134 0000005A                 ENDP
  135 0000005A         
  136 0000005A         
  137 0000005A         HardFault_Handler
                               PROC
  138 0000005A         
  139 0000005A 4908            LDR              R1, =GPIOD_BSRR
  140 0000005C 4B08            LDR              R3, =LED2
  141 0000005E 600B            STR              R3, [R1]
  142 00000060         
  143 00000060 E7FE            B                .
  144 00000062         
  145 00000062                 ENDP
  146 00000062         
  147 00000062 00 00           ALIGN
  148 00000064         
  149 00000064 00001000 
                       LEDs_ON EQU              0x00001000
  150 00000064 10000000 
                       LEDs_OFF
                               EQU              0x10000000
  151 00000064         
  152 00000064 D0002000 
                       LED2    EQU              0xD0002000  ;Switch on LED at P



ARM Macro Assembler    Page 5 


                                                            D13 and switch off 
                                                            PD12,PD14,PD15
  153 00000064         
  154 00000064         
  155 00000064         
  156 00000064                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              40020C18 
              D0002000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\isr.d -o.\objects\isr.o -I.\RTE\_Target_1 -IC:\Keil_v
5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include 
-IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISI
ON_VERSION SETA 524" --predefine="STM32F407xx SETA 1" --list=.\listings\isr.lst
 ..\src\isr.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DoneService 0000003E

Symbol: DoneService
   Definitions
      At line 107 in file ..\src\isr.s
   Uses
      At line 87 in file ..\src\isr.s
      At line 91 in file ..\src\isr.s
      At line 95 in file ..\src\isr.s
      At line 99 in file ..\src\isr.s
      At line 103 in file ..\src\isr.s

DoneSysTick 00000052

Symbol: DoneSysTick
   Definitions
      At line 128 in file ..\src\isr.s
   Uses
      At line 125 in file ..\src\isr.s
Comment: DoneSysTick used once
HardFault_Handler 0000005A

Symbol: HardFault_Handler
   Definitions
      At line 137 in file ..\src\isr.s
   Uses
      At line 75 in file ..\src\isr.s
Comment: HardFault_Handler used once
ISRCODE 00000000

Symbol: ISRCODE
   Definitions
      At line 18 in file ..\src\isr.s
   Uses
      None
Comment: ISRCODE unused
SVC_Handler 00000000

Symbol: SVC_Handler
   Definitions
      At line 72 in file ..\src\isr.s
   Uses
      At line 73 in file ..\src\isr.s
Comment: SVC_Handler used once
SysTick_Handler 00000044

Symbol: SysTick_Handler
   Definitions
      At line 117 in file ..\src\isr.s
   Uses
      At line 74 in file ..\src\isr.s
Comment: SysTick_Handler used once
Turn_OFF 0000004E

Symbol: Turn_OFF
   Definitions
      At line 126 in file ..\src\isr.s
   Uses
      At line 122 in file ..\src\isr.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: Turn_OFF used once
Turn_ON 00000048

Symbol: Turn_ON
   Definitions
      At line 123 in file ..\src\isr.s
   Uses
      None
Comment: Turn_ON unused
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOD_BSRR 40020C18

Symbol: GPIOD_BSRR
   Definitions
      At line 15 in file ..\src\reg_stm32f407xx.inc
   Uses
      At line 120 in file ..\src\isr.s
      At line 139 in file ..\src\isr.s

GPIOD_MODER 40020C00

Symbol: GPIOD_MODER
   Definitions
      At line 9 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_MODER unused
GPIOD_ODR 40020C14

Symbol: GPIOD_ODR
   Definitions
      At line 13 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_ODR unused
GPIOD_OSPEEDR 40020C08

Symbol: GPIOD_OSPEEDR
   Definitions
      At line 11 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_OSPEEDR unused
GPIOD_OTYPER 40020C04

Symbol: GPIOD_OTYPER
   Definitions
      At line 10 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_OTYPER unused
GPIOD_PUPDR 40020C0C

Symbol: GPIOD_PUPDR
   Definitions
      At line 12 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_PUPDR unused
LED2 D0002000

Symbol: LED2
   Definitions
      At line 152 in file ..\src\isr.s
   Uses
      At line 140 in file ..\src\isr.s
Comment: LED2 used once
LEDs_OFF 10000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: LEDs_OFF
   Definitions
      At line 150 in file ..\src\isr.s
   Uses
      At line 127 in file ..\src\isr.s
Comment: LEDs_OFF used once
LEDs_ON 00001000

Symbol: LEDs_ON
   Definitions
      At line 149 in file ..\src\isr.s
   Uses
      At line 124 in file ..\src\isr.s
Comment: LEDs_ON used once
RCC_AHB1ENR 40023830

Symbol: RCC_AHB1ENR
   Definitions
      At line 6 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: RCC_AHB1ENR unused
SYSTICK_CONTROLR E000E010

Symbol: SYSTICK_CONTROLR
   Definitions
      At line 18 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: SYSTICK_CONTROLR unused
SYSTICK_RELOADR E000E014

Symbol: SYSTICK_RELOADR
   Definitions
      At line 19 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: SYSTICK_RELOADR unused
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Service_Call_1 00000000

Symbol: Service_Call_1
   Definitions
      At line 21 in file ..\src\isr.s
   Uses
      At line 86 in file ..\src\isr.s
Comment: Service_Call_1 used once
Service_Call_2 00000000

Symbol: Service_Call_2
   Definitions
      At line 22 in file ..\src\isr.s
   Uses
      At line 90 in file ..\src\isr.s
Comment: Service_Call_2 used once
Service_Call_3 00000000

Symbol: Service_Call_3
   Definitions
      At line 23 in file ..\src\isr.s
   Uses
      At line 94 in file ..\src\isr.s
Comment: Service_Call_3 used once
Service_Call_4 00000000

Symbol: Service_Call_4
   Definitions
      At line 24 in file ..\src\isr.s
   Uses
      At line 98 in file ..\src\isr.s
Comment: Service_Call_4 used once
Service_Call_5 00000000

Symbol: Service_Call_5
   Definitions
      At line 25 in file ..\src\isr.s
   Uses
      At line 102 in file ..\src\isr.s
Comment: Service_Call_5 used once
Service_Call_Default 00000000

Symbol: Service_Call_Default
   Definitions
      At line 26 in file ..\src\isr.s
   Uses
      At line 105 in file ..\src\isr.s
Comment: Service_Call_Default used once
6 symbols
362 symbols in table
