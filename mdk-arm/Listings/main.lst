


ARM Macro Assembler    Page 1 


    1 00000000         ;******************** (C) COPYRIGHT 2018 IoTality ******
                       **************
    2 00000000         ;* File Name          : main.s
    3 00000000         ;* Author             : Gopal
    4 00000000         ;* Date               : 22-June-2018
    5 00000000         ;* Description        : Main code to demonstrate Privile
                       ged and Unprivileged access levels
    6 00000000         ;*                      - Starts in unprivileged access 
                       level 
    7 00000000         ;*                      - Writes to and reads from speci
                       al registers
    8 00000000         ;*      - are ignored in this mode. 
    9 00000000         ;*      - Attempt to write to SysTick registers results
   10 00000000         ;*      - in Hard fault. (Actually a bus usage fault but
                       
   11 00000000         ;*      - since bus usage fault is disabled by default, 
                       this
   12 00000000         ;*      - vectors to hard fault).
   13 00000000         ;*      - A service handler function (0x05) is provided 
                       to switch
   14 00000000         ;*      - to privileged mode. Uncomment the call to SVC 
                       0x05 and then
   15 00000000         ;*      - rebuild the code and try again. Systick should
                        start working and
   16 00000000         ;*      - blink LED at PD12 on STM32F4 Discovery Board.
   17 00000000         ;*******************************************************
                       **************
   18 00000000                 GET              reg_stm32f407xx.inc
    1 00000000         
    2 00000000         ; ******* Register definitions *******
    3 00000000         
    4 00000000         ;As per STM32F407 datasheet and reference manual
    5 00000000         
    6 00000000 40023830 
                       RCC_AHB1ENR
                               EQU              0x40023830  ;Clock control for 
                                                            AHB1 peripherals (i
                                                            ncludes GPIO)
    7 00000000         
    8 00000000         ;GPIO-D control registers
    9 00000000 40020C00 
                       GPIOD_MODER
                               EQU              0x40020C00  ;set GPIO pin mode 
                                                            as Input/Output/Ana
                                                            log
   10 00000000 40020C04 
                       GPIOD_OTYPER
                               EQU              0x40020C04  ;Set GPIO pin type 
                                                            as push-pull or ope
                                                            n drain
   11 00000000 40020C08 
                       GPIOD_OSPEEDR
                               EQU              0x40020C08  ;Set GPIO pin switc
                                                            hing speed
   12 00000000 40020C0C 
                       GPIOD_PUPDR
                               EQU              0x40020C0C  ;Set GPIO pin pull-
                                                            up/pull-down
   13 00000000 40020C14 



ARM Macro Assembler    Page 2 


                       GPIOD_ODR
                               EQU              0x40020C14  ;GPIO pin output da
                                                            ta
   14 00000000         
   15 00000000 40020C18 
                       GPIOD_BSRR
                               EQU              0x40020C18
   16 00000000         
   17 00000000         
   18 00000000 E000E010 
                       SYSTICK_CONTROLR
                               EQU              0xE000E010
   19 00000000 E000E014 
                       SYSTICK_RELOADR
                               EQU              0xE000E014
   20 00000000         
   21 00000000         
   22 00000000         ; **************************
   23 00000000         
   24 00000000         
   25 00000000                 END
   19 00000000         
   20 00000000         ;USE_SVC EQU 0
   21 00000000         
   22 00000000                 GBLL             USE_SVC
   23 00000000 TRUE     
                       USE_SVC SETL             {TRUE}
   24 00000000         
   25 00000000         ; Export functions so they can be called from other file
                       
   26 00000000         
   27 00000000                 EXPORT           SystemInit
   28 00000000                 EXPORT           __main
   29 00000000         
   30 00000000                 AREA             MYCODE, CODE, READONLY
   31 00000000         
   32 00000000         ; ******* Function SystemInit *******
   33 00000000         ; * Called from startup code
   34 00000000         ; * Calls - None
   35 00000000         ; * Enables GPIO clock 
   36 00000000         ; * Configures GPIO-D Pins 12 to 15 as:
   37 00000000         ; ** Output
   38 00000000         ; ** Push-pull (Default configuration)
   39 00000000         ; ** High speed
   40 00000000         ; ** Pull-up enabled
   41 00000000         
   42 00000000         ; **************************
   43 00000000         
   44 00000000         SystemInit
                               FUNCTION
   45 00000000         
   46 00000000         ; Enable GPIO clock
   47 00000000 4921            LDR              R1, =RCC_AHB1ENR ;Pseudo-load a
                                                            ddress in R1
   48 00000002 6808            LDR              R0, [R1]    ;Copy contents at a
                                                            ddress in R1 to R0
   49 00000004 F040 0008       ORR.W            R0, #0x08   ;Bitwise OR entire 
                                                            word in R0, result 
                                                            in R0



ARM Macro Assembler    Page 3 


   50 00000008 6008            STR              R0, [R1]    ;Store R0 contents 
                                                            to address in R1
   51 0000000A         
   52 0000000A         ; Set mode as output
   53 0000000A 4920            LDR              R1, =GPIOD_MODER ;Two bits per 
                                                            pin so bits 24 to 3
                                                            1 control pins 12 t
                                                            o 15
   54 0000000C 6808            LDR              R0, [R1]
   55 0000000E F040 40AA       ORR.W            R0, #0x55000000 ;Mode bits set 
                                                            to '01' makes the p
                                                            in mode as output
   56 00000012 F020 402A       AND.W            R0, #0x55FFFFFF ;OR and AND bot
                                                            h operations reqd f
                                                            or 2 bits
   57 00000016 6008            STR              R0, [R1]
   58 00000018         
   59 00000018         ; Set type as push-pull (Default)
   60 00000018 491D            LDR              R1, =GPIOD_OTYPER ;Type bit '0'
                                                             configures pin for
                                                             push-pull
   61 0000001A 6808            LDR              R0, [R1]
   62 0000001C F420 4070       AND.W            R0, #0xFFFF0FFF
   63 00000020 6008            STR              R0, [R1]
   64 00000022         
   65 00000022         ; Set Speed slow
   66 00000022 491C            LDR              R1, =GPIOD_OSPEEDR ;Two bits pe
                                                            r pin so bits 24 to
                                                             31 control pins 12
                                                             to 15
   67 00000024 6808            LDR              R0, [R1]
   68 00000026 F020 407F       AND.W            R0, #0x00FFFFFF ;Speed bits set
                                                             to '00' configures
                                                             pin for slow speed
                                                            
   69 0000002A 6008            STR              R0, [R1]
   70 0000002C         
   71 0000002C         ; Set pull-up
   72 0000002C 491A            LDR              R1, =GPIOD_PUPDR ;Two bits per 
                                                            pin so bits 24 to 3
                                                            1 control pins 12 t
                                                            o 15
   73 0000002E 6808            LDR              R0, [R1]
   74 00000030 F020 407F       AND.W            R0, #0x00FFFFFF ;Clear bits to 
                                                            disable pullup/pull
                                                            down
   75 00000034 6008            STR              R0, [R1]
   76 00000036         
   77 00000036 4770            BX               LR          ;Return from functi
                                                            on
   78 00000038         
   79 00000038                 ENDFUNC
   80 00000038         
   81 00000038         
   82 00000038         ; ******* Function main *******
   83 00000038         ;* Called from startup code after SystemInit
   84 00000038         ;* Never returns. 
   85 00000038         ;* Starts in unprivileged mode.
   86 00000038         ;* See the comment block at top of this file for details



ARM Macro Assembler    Page 4 


                       
   87 00000038         ;* Debug the code step by step and observe registers val
                       ues.
   88 00000038         ;* such as PRIMASK, FAULTMASK, BASEPRI and CONTROL
   89 00000038         ; **************************
   90 00000038         
   91 00000038         __main  FUNCTION
   92 00000038         
   93 00000038         
   94 00000038         
   95 00000038         ; Start in unprivileged mode
   96 00000038 F04F 0001       MOV              R0, #01
   97 0000003C F380 8814       MSR              CONTROL, R0
   98 00000040         
   99 00000040         
  100 00000040         ; Getting back to privileged mode via 
  101 00000040         ; write to CONTROL register isn't possible now
  102 00000040         ; Writes to CONTROL register are simply ignored
  103 00000040 F04F 0000       MOV              R0, #0x00
  104 00000044 F380 8814       MSR              CONTROL, R0
  105 00000048         
  106 00000048         ; Correct way of switching back to privileged level
  107 00000048                 IF               USE_SVC = {TRUE}
  108 00000048 DF05            SVC              #0x05
  109 0000004A                 ENDIF
  110 0000004A         
  111 0000004A         ; Writes to some special registers are ignored in unpriv
                       ileged mode
  112 0000004A         ; Reads from these registers return zero
  113 0000004A         
  114 0000004A F04F 0001       MOV              R0, #0x01
  115 0000004E         
  116 0000004E F380 8811       MSR              BASEPRI, R0
  117 00000052 F380 8810       MSR              PRIMASK, R0
  118 00000056 F380 8813       MSR              FAULTMASK, R0
  119 0000005A         
  120 0000005A F3EF 8011       MRS              R0, BASEPRI
  121 0000005E F3EF 8010       MRS              R0, PRIMASK
  122 00000062 F3EF 8013       MRS              R0, FAULTMASK
  123 00000066         
  124 00000066         
  125 00000066         ; Similarly, the CPS instructions have no effect in unpr
                       ivileged mode
  126 00000066         
  127 00000066 B662            CPSIE            i
  128 00000068 B672            CPSID            i
  129 0000006A B661            CPSIE            f
  130 0000006C B671            CPSID            f
  131 0000006E         
  132 0000006E         ;Finally re-enable interrupts and faults
  133 0000006E B662            CPSIE            i
  134 00000070 B661            CPSIE            f
  135 00000072         
  136 00000072         ; Writing to SysTick control register 
  137 00000072         ; results in Fault in unprivileged mode
  138 00000072         
  139 00000072 490A            LDR              R1, =SYSTICK_RELOADR
  140 00000074 4A0A            LDR              R2, =SYST_RELOAD_500MS
  141 00000076 600A            STR              R2, [R1]



ARM Macro Assembler    Page 5 


  142 00000078         
  143 00000078         
  144 00000078         ; Writing to SysTick reload register 
  145 00000078         ; results in Fault in unprivileged mode
  146 00000078         
  147 00000078 F04F 0700       MOV              R7, #0x00
  148 0000007C         
  149 0000007C 4909            LDR              R1, =SYSTICK_CONTROLR
  150 0000007E 6808            LDR              R0, [R1]
  151 00000080 F040 0007       ORR.W            R0, #ENABLE_SYSTICK
  152 00000084 6008            STR              R0, [R1]
  153 00000086         
  154 00000086         
  155 00000086 E7FE            B                .
  156 00000088         
  157 00000088                 ENDFUNC
  158 00000088         
  159 00000088                 ALIGN
  160 00000088 007A1200 
                       SYST_RELOAD_500MS
                               EQU              0x007A1200
  161 00000088 00F42400 
                       SYST_RELOAD_1000MS
                               EQU              0X00F42400
  162 00000088 00000007 
                       ENABLE_SYSTICK
                               EQU              0x07
  163 00000088         
  164 00000088                 END
              40023830 
              40020C00 
              40020C04 
              40020C08 
              40020C0C 
              E000E014 
              007A1200 
              E000E010 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Keil
_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Includ
e -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVI
SION_VERSION SETA 524" --predefine="STM32F407xx SETA 1" --list=.\listings\main.
lst ..\src\main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MYCODE 00000000

Symbol: MYCODE
   Definitions
      At line 30 in file ..\src\main.s
   Uses
      None
Comment: MYCODE unused
SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 44 in file ..\src\main.s
   Uses
      At line 27 in file ..\src\main.s
Comment: SystemInit used once
__main 00000038

Symbol: __main
   Definitions
      At line 91 in file ..\src\main.s
   Uses
      At line 28 in file ..\src\main.s
Comment: __main used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ENABLE_SYSTICK 00000007

Symbol: ENABLE_SYSTICK
   Definitions
      At line 162 in file ..\src\main.s
   Uses
      At line 151 in file ..\src\main.s
Comment: ENABLE_SYSTICK used once
GPIOD_BSRR 40020C18

Symbol: GPIOD_BSRR
   Definitions
      At line 15 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_BSRR unused
GPIOD_MODER 40020C00

Symbol: GPIOD_MODER
   Definitions
      At line 9 in file ..\src\reg_stm32f407xx.inc
   Uses
      At line 53 in file ..\src\main.s
Comment: GPIOD_MODER used once
GPIOD_ODR 40020C14

Symbol: GPIOD_ODR
   Definitions
      At line 13 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_ODR unused
GPIOD_OSPEEDR 40020C08

Symbol: GPIOD_OSPEEDR
   Definitions
      At line 11 in file ..\src\reg_stm32f407xx.inc
   Uses
      At line 66 in file ..\src\main.s
Comment: GPIOD_OSPEEDR used once
GPIOD_OTYPER 40020C04

Symbol: GPIOD_OTYPER
   Definitions
      At line 10 in file ..\src\reg_stm32f407xx.inc
   Uses
      At line 60 in file ..\src\main.s
Comment: GPIOD_OTYPER used once
GPIOD_PUPDR 40020C0C

Symbol: GPIOD_PUPDR
   Definitions
      At line 12 in file ..\src\reg_stm32f407xx.inc
   Uses
      At line 72 in file ..\src\main.s
Comment: GPIOD_PUPDR used once
RCC_AHB1ENR 40023830

Symbol: RCC_AHB1ENR



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 6 in file ..\src\reg_stm32f407xx.inc
   Uses
      At line 47 in file ..\src\main.s
Comment: RCC_AHB1ENR used once
SYSTICK_CONTROLR E000E010

Symbol: SYSTICK_CONTROLR
   Definitions
      At line 18 in file ..\src\reg_stm32f407xx.inc
   Uses
      At line 149 in file ..\src\main.s
Comment: SYSTICK_CONTROLR used once
SYSTICK_RELOADR E000E014

Symbol: SYSTICK_RELOADR
   Definitions
      At line 19 in file ..\src\reg_stm32f407xx.inc
   Uses
      At line 139 in file ..\src\main.s
Comment: SYSTICK_RELOADR used once
SYST_RELOAD_1000MS 00F42400

Symbol: SYST_RELOAD_1000MS
   Definitions
      At line 161 in file ..\src\main.s
   Uses
      None
Comment: SYST_RELOAD_1000MS unused
SYST_RELOAD_500MS 007A1200

Symbol: SYST_RELOAD_500MS
   Definitions
      At line 160 in file ..\src\main.s
   Uses
      At line 140 in file ..\src\main.s
Comment: SYST_RELOAD_500MS used once
12 symbols
352 symbols in table
